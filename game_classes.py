class Character:
    def __init__(self, name, max_health, health, weapon=None):
        self.name = name
        self.max_health = max_health
        self.health = health
        self.weapon = weapon
        self.is_alive = True

    def take_damage(self, damage):
        self.health -= damage
        if self.health <= 0:
            self.health = 0
            self.is_alive = False
            print(f"{self.name} –ø–æ–≥–∏–±! üíÄ")
        else:
            hearts = self.get_hearts()
            print(f"{self.name} –ø–æ–ª—É—á–∏–ª {damage} —É—Ä–æ–Ω–∞. {hearts}")

    def get_hearts(self):
        heart_count = round(self.health / self.max_health * 10)
        return "‚ù§Ô∏è" * heart_count + "üñ§" * (10 - heart_count)

    def attack(self, target):
        if self.weapon:
            damage = self.weapon.damage
            print(f"{self.name} –∞—Ç–∞–∫—É–µ—Ç {target.name} —Å –ø–æ–º–æ—â—å—é {self.weapon.name}! ‚öîÔ∏è")
            target.take_damage(damage)
        else:
            damage = 5
            print(f"{self.name} –∞—Ç–∞–∫—É–µ—Ç {target.name} –∫—É–ª–∞–∫–∞–º–∏! üëä")
            target.take_damage(damage)

# –ö–ª–∞—Å—Å –∏–≥—Ä–æ–∫–∞
class Player(Character):
    def __init__(self, name, max_health=100, health=100, weapon=None):
        super().__init__(name, max_health, health, weapon)
        self.experience = 0
        self.level = 1
        
    def heal(self, amount):
        self.health = min(self.health + amount, self.max_health)
        hearts = self.get_hearts()
        print(f"{self.name} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª {amount} HP. {hearts}")

# –ö–ª–∞—Å—Å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
class Enemy(Character):
    def __init__(self, name, max_health=50, health=50, weapon=None, exp_reward=10):
        super().__init__(name, max_health, health, weapon)
        self.exp_reward = exp_reward
    
    def __copy__(self):
        return Enemy(self.name, self.max_health, self.max_health, 
                   Weapon(self.weapon.name, self.weapon.damage) if self.weapon else None, 
                   self.exp_reward)

# –ö–ª–∞—Å—Å –≤–æ–∏–Ω–∞
class Warrior(Player):
    def __init__(self, name):
        super().__init__(name, max_health=150, health=150)
        self.special_ability_cooldown = 3
        self.current_cooldown = 0
        
    def power_strike(self, target):
        if self.current_cooldown <= 0:
            damage = 30 + (self.weapon.damage if self.weapon else 0)
            print(f"{self.name} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ú–û–©–ù–´–ô –£–î–ê–† –ø–æ {target.name}! üí•")
            target.take_damage(damage)
            self.current_cooldown = self.special_ability_cooldown
        else:
            print(f"–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–∑–∞—Ä—è–∂–∞–µ—Ç—Å—è! –û—Å—Ç–∞–ª–æ—Å—å —Ö–æ–¥–æ–≤: {self.current_cooldown} üîÑ")
            self.attack(target)
            
    def end_turn(self):
        if self.current_cooldown > 0:
            self.current_cooldown -= 1

# –ö–ª–∞—Å—Å –ª—É—á–Ω–∏–∫–∞
class Archer(Player):
    def __init__(self, name):
        super().__init__(name, max_health=80, health=80)
        self.arrows = 10
        
    def shoot(self, target):
        if self.arrows > 0:
            damage = 25 + (self.weapon.damage if self.weapon else 0)
            print(f"{self.name} —Å—Ç—Ä–µ–ª—è–µ—Ç –≤ {target.name}! üèπ")
            target.take_damage(damage)
            self.arrows -= 1
        else:
            print("–ù–µ—Ç —Å—Ç—Ä–µ–ª! üö´ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—ã—á–Ω–∞—è –∞—Ç–∞–∫–∞.")
            self.attack(target)
            
    def restock_arrows(self, amount):
        self.arrows += amount
        print(f"{self.name} –ø–æ–ø–æ–ª–Ω–∏–ª –∑–∞–ø–∞—Å —Å—Ç—Ä–µ–ª. –¢–µ–ø–µ—Ä—å {self.arrows} —Å—Ç—Ä–µ–ª üéØ")

# –ö–ª–∞—Å—Å –æ—Ä—É–∂–∏—è
class Weapon:
    def __init__(self, name, damage):
        self.name = name
        self.damage = damage

# –ú–µ—Ö–∞–Ω–∏–∫–∞ —Å—Ä–∞–∂–µ–Ω–∏—è
class Battle:
    @staticmethod
    def fight(player, enemy):
        print(f"\n=== ‚öîÔ∏è –ë–ò–¢–í–ê: {player.name} vs {enemy.name} ‚öîÔ∏è ===")
        
        while player.is_alive and enemy.is_alive:
            # –•–æ–¥ –∏–≥—Ä–æ–∫–∞
            print("\n--- –í–∞—à —Ö–æ–¥ ---")
            print(f"1. –ê—Ç–∞–∫–∞ ({player.weapon.name if player.weapon else '–∫—É–ª–∞–∫–∏'})")
            
            if isinstance(player, Warrior):
                print(f"2. –ú–æ—â–Ω—ã–π —É–¥–∞—Ä {'(–≥–æ—Ç–æ–≤–æ)' if player.current_cooldown <= 0 else '(–ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞)'}")
            elif isinstance(player, Archer):
                print(f"2. –í—ã—Å—Ç—Ä–µ–ª –∏–∑ –ª—É–∫–∞ (–æ—Å—Ç–∞–ª–æ—Å—å —Å—Ç—Ä–µ–ª: {player.arrows})")
                
            print("3. –õ–µ—á–µ–Ω–∏–µ (+20 HP)")
            
            action = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-3): ")
            
            if action == "1":
                player.attack(enemy)
            elif action == "2":
                if isinstance(player, Warrior):
                    player.power_strike(enemy)
                elif isinstance(player, Archer):
                    player.shoot(enemy)
            elif action == "3":
                player.heal(20)
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞ ‚ùå")
                
            if isinstance(player, Warrior):
                player.end_turn()
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É
            if not enemy.is_alive:
                print(f"\n‚≠ê {player.name} –ø–æ–±–µ–¥–∏–ª {enemy.name}! ‚≠ê")
                if isinstance(player, Player):
                    player.experience += enemy.exp_reward
                    print(f"–ü–æ–ª—É—á–µ–Ω–æ {enemy.exp_reward} –æ–ø—ã—Ç–∞! ‚ú®")
                return True
                
            # –•–æ–¥ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞
            print("\n--- –•–æ–¥ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ ---")
            enemy.attack(player)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ
            if not player.is_alive:
                print(f"\n‚ò†Ô∏è {player.name} –±—ã–ª –ø–æ–±–µ–∂–¥–µ–Ω {enemy.name}! ‚ò†Ô∏è")
                return False