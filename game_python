import random
from abc import ABC, abstractmethod

class Weapon:
    def __init__(self, name, damage, weapon_type="melee"):
        self.name = name
        self.damage = damage
        self.weapon_type = weapon_type
    
    def __str__(self):
        return f"{self.name} (урон: {self.damage})"

class Character(ABC):
    def __init__(self, name, health, weapon=None):
        self.name = name
        self.max_health = health
        self.health = health
        self.weapon = weapon if weapon else Weapon('кулаки', 2)
        self.is_alive = True
    
    def take_damage(self, damage):
        self.health -= damage
        if self.health <= 0:
            self.health = 0
            self.is_alive = False
            print(f"{self.name} повержен!")
        else:
            print(f"{self.name} получает {damage} урона. Осталось {self.health} HP.")
    
    def heal(self, amount):
        if not self.is_alive:
            return
        
        self.health = min(self.health + amount, self.max_health)
        print(f"{self.name} восстанавливает {amount} HP. Теперь {self.health}/{self.max_health} HP.")
    
    def attack(self, target):
        if not self.is_alive or not target.is_alive:
            return
        
        damage = random.randint(self.weapon.damage // 2, self.weapon.damage)
        print(f"{self.name} атакует {target.name} используя {self.weapon.name}!")
        target.take_damage(damage)
    
    @abstractmethod
    def special_ability(self):
        pass
    
    def __str__(self):
        return f"{self.name} - HP: {self.health}/{self.max_health}, Оружие: {self.weapon}"

class Player(Character):
    def __init__(self, name, health=100):
        super().__init__(name, health)
        self.inventory = []
        self.experience = 0
        self.level = 1
    
    def special_ability(self):
        print(f"{self.name} использует специальную способность - мощный удар!")
        return self.weapon.damage * 2
    
    def add_to_inventory(self, item):
        self.inventory.append(item)
        print(f"Предмет {item.name} добавлен в инвентарь.")
    
    def change_weapon(self, weapon_index):
        if 0 <= weapon_index < len(self.inventory):
            new_weapon = self.inventory[weapon_index]
            if isinstance(new_weapon, Weapon):
                self.weapon = new_weapon
                print(f"{self.name} теперь использует {new_weapon.name}!")
            else:
                print("Это не оружие!")
        else:
            print("Неверный индекс предмета.")
    
    def show_inventory(self):
        print("\n--- Инвентарь ---")
        for i, item in enumerate(self.inventory):
            print(f"{i}. {item}")
        print("-----------------")

class Enemy(Character):
    def __init__(self, name, health, weapon, enemy_type="обычный"):
        super().__init__(name, health, weapon)
        self.enemy_type = enemy_type
    
    def special_ability(self):
        if self.enemy_type == "босс":
            print(f"{self.name} использует специальную атаку босса!")
            return self.weapon.damage * 1.5
        else:
            print(f"{self.name} яростно атакует!")
            return self.weapon.damage
    
    @classmethod
    def create_random_enemy(cls):
        enemy_types = ["гоблин", "орк", "скелет", "бандит"]
        enemy_weapons = [
            Weapon("ржавый меч", 5),
            Weapon("топор", 7),
            Weapon("лук", 4, "ranged"),
            Weapon("кинжал", 3)
        ]
        
        name = random.choice(enemy_types)
        health = random.randint(30, 60)
        weapon = random.choice(enemy_weapons)
        
        return cls(name, health, weapon)

def battle(player, enemy):
    print(f"\n=== Битва начинается: {player.name} vs {enemy.name} ===")
    
    while player.is_alive and enemy.is_alive:
        # Ход игрока
        print("\nВаш ход:")
        print("1. Атаковать")
        print("2. Использовать способность")
        print("3. Показать инвентарь")
        print("4. Сменить оружие")
        
        choice = input("Выберите действие: ")
        
        if choice == "1":
            player.attack(enemy)
        elif choice == "2":
            damage = player.special_ability()
            enemy.take_damage(damage)
        elif choice == "3":
            player.show_inventory()
            continue
        elif choice == "4":
            weapon_index = int(input("Введите номер оружия: "))
            player.change_weapon(weapon_index)
            continue
        else:
            print("Неверный выбор, пропускаю ход.")
        
        # Ход врага, если он еще жив
        if enemy.is_alive:
            if random.random() < 0.3:
                damage = enemy.special_ability()
                player.take_damage(damage)
            else:
                enemy.attack(player)
    
    if player.is_alive:
        print(f"\nПобеда! {enemy.name} повержен!")
        return True
    else:
        print("\nВы проиграли...")
        return False

def main():
    print("Добро пожаловать в консольную RPG!")
    player_name = input("Введите имя вашего персонажа: ")
    player = Player(player_name)
    
    # Добавим стартовое оружие в инвентарь
    sword = Weapon("меч", 10)
    player.add_to_inventory(sword)
    player.add_to_inventory(Weapon("посох", 8))
    
    # Начнем с меча
    player.change_weapon(0)
    
    enemies_defeated = 0
    
    while player.is_alive:
        print("\n" + "="*40)
        print(f"Здоровье: {player.health}/{player.max_health}")
        print(f"Побеждено врагов: {enemies_defeated}")
        print("="*40)
        
        print("\n1. Искать врага")
        print("2. Отдохнуть (восстановить здоровье)")
        print("3. Проверить инвентарь")
        print("4. Выйти из игры")
        
        choice = input("Выберите действие: ")
        
        if choice == "1":
            enemy = Enemy.create_random_enemy()
            if battle(player, enemy):
                enemies_defeated += 1
            else:
                break
        elif choice == "2":
            heal_amount = random.randint(10, 20)
            player.heal(heal_amount)
        elif choice == "3":
            player.show_inventory()
            weapon_index = input("Введите номер оружия для смены (или Enter чтобы отменить): ")
            if weapon_index.isdigit():
                player.change_weapon(int(weapon_index))
        elif choice == "4":
            print("Спасибо за игру!")
            break
        else:
            print("Неверный выбор, попробуйте снова.")
    
    print(f"\nИгра окончена. Ваш результат: {enemies_defeated} побежденных врагов.")

if __name__ == "__main__":
    main()
